Ext.data.JsonP.Layer({"tagname":"class","name":"Layer","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Layer","members":{"cfg":[],"property":[],"method":[{"name":"clear","tagname":"method","owner":"Layer","meta":{},"id":"method-clear"},{"name":"draw","tagname":"method","owner":"Layer","meta":{},"id":"method-draw"},{"name":"scroll","tagname":"method","owner":"Layer","meta":{},"id":"method-scroll"},{"name":"showCanvasOverlay","tagname":"method","owner":"Layer","meta":{},"id":"method-showCanvasOverlay"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":941,"files":[{"filename":"actors.js","href":"actors.html#Layer"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/actors.html#Layer' target='_blank'>actors.js</a></div></pre><div class='doc-contents'><p>The Layer object (basically a new, utility canvas).</p>\n\n<p>Layers allow efficient rendering of complex scenes by acting as caches for\nparts of the scene that are grouped together. For example, it is recommended\nto create a layer for your canvas's background so that you can render the\nbackground once and then draw the completely rendered background onto the\nmain canvas in each frame instead of re-computing the background for each\nframe. This can significantly speed up animation.</p>\n\n<p>In general you should create a layer for any significant grouping of items\nthat must be drawn on the canvas if that grouping moves together when\nanimated. It is more memory-efficient to specify a smaller layer size if\npossible; otherwise the layer will default to the size of the whole canvas.</p>\n\n<p>Draw onto a Layer by using its \"context\" property, which is a canvas\ngraphics context.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clear' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Layer'>Layer</span><br/><a href='source/actors.html#Layer-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Layer-method-clear' class='name expandable'>clear</a>( <span class='pre'>fillStyle</span> )</div><div class='description'><div class='short'>Clear the layer, optionally by filling it with a given style. ...</div><div class='long'><p>Clear the layer, optionally by filling it with a given style.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fillStyle</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-draw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Layer'>Layer</span><br/><a href='source/actors.html#Layer-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Layer-method-draw' class='name expandable'>draw</a>( <span class='pre'>ctx, x, y</span> )</div><div class='description'><div class='short'>Draw the Layer. ...</div><div class='long'><p>Draw the Layer.</p>\n\n<p>This method can be invoked in two ways:\n- draw(x, y)\n- draw(ctx, x, y)</p>\n\n<p>All parameters are optional either way.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctx</span> : Object<div class='sub-desc'><p>(Optional) A canvas graphics context onto which this Layer should be\n  drawn. This is useful for drawing onto other Layers. If not specified,\n  defaults to the global context for the default canvas.</p>\n</div></li><li><span class='pre'>x</span> : Object<div class='sub-desc'><p>(Optional) An x-coordinate on the canvas specifying where to draw the\n  upper-left corner of the Layer. The actual position that the coordinate\n  equates to depends on the value of the Layer's \"relative\" property.\n  Defaults to the Layer's \"x\" property (which defaults to 0 [zero]).</p>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'><p>(Optional) A y-coordinate on the canvas specifying where to draw the\n  upper-left corner of the Layer. The actual position that the coordinate\n  equates to depends on the value of the Layer's \"relative\" property.\n  Defaults to the Layer's \"y\" property (which defaults to 0 [zero]).</p>\n</div></li></ul></div></div></div><div id='method-scroll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Layer'>Layer</span><br/><a href='source/actors.html#Layer-method-scroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Layer-method-scroll' class='name expandable'>scroll</a>( <span class='pre'>x, y, p</span> )</div><div class='description'><div class='short'>Scroll the Layer. ...</div><div class='long'><p>Scroll the Layer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Object<div class='sub-desc'><p>The horizontal distance the target has shifted.</p>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'><p>The vertical distance the target has shifted.</p>\n</div></li><li><span class='pre'>p</span> : Object<div class='sub-desc'><p>(Optional) The parallax factor. Defaults to this.parallax.</p>\n</div></li></ul></div></div></div><div id='method-showCanvasOverlay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Layer'>Layer</span><br/><a href='source/actors.html#Layer-method-showCanvasOverlay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Layer-method-showCanvasOverlay' class='name expandable'>showCanvasOverlay</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Display this Layer's canvas in an overlay (for debugging purposes). ...</div><div class='long'><p>Display this Layer's canvas in an overlay (for debugging purposes).</p>\n</div></div></div></div></div></div></div>"});