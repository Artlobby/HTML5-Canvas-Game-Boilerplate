Ext.data.JsonP.TileMap({"tagname":"class","name":"TileMap","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-TileMap","members":{"cfg":[],"property":[],"method":[{"name":"_getCellCoordsInRect","tagname":"method","owner":"TileMap","meta":{},"id":"method-_getCellCoordsInRect"},{"name":"clearAll","tagname":"method","owner":"TileMap","meta":{},"id":"method-clearAll"},{"name":"clearCell","tagname":"method","owner":"TileMap","meta":{},"id":"method-clearCell"},{"name":"draw","tagname":"method","owner":"TileMap","meta":{},"id":"method-draw"},{"name":"forEach","tagname":"method","owner":"TileMap","meta":{"chainable":true},"id":"method-forEach"},{"name":"getAll","tagname":"method","owner":"TileMap","meta":{},"id":"method-getAll"},{"name":"getCell","tagname":"method","owner":"TileMap","meta":{},"id":"method-getCell"},{"name":"getCellsInRect","tagname":"method","owner":"TileMap","meta":{},"id":"method-getCellsInRect"},{"name":"getCols","tagname":"method","owner":"TileMap","meta":{},"id":"method-getCols"},{"name":"getRows","tagname":"method","owner":"TileMap","meta":{},"id":"method-getRows"},{"name":"setCell","tagname":"method","owner":"TileMap","meta":{},"id":"method-setCell"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":467,"files":[{"filename":"actors.js","href":"actors.html#TileMap"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/actors.html#TileMap' target='_blank'>actors.js</a></div></pre><div class='doc-contents'><p>A grid of objects (like a 2D Collection) for easy manipulation.</p>\n\n<p>TileMaps are useful for rapidly initializing and managing large sets of\nsame-sized \"tiles,\" a common need for many 2D games. TileMaps can be created\neither empty (ready to be filled in later) or with a predetermined set of\nobjects. In the first case the grid and map parameters are ignored and a\nblank grid is created using the dimensions specified in options.gridSize\n(which is then required). In the second case, there are three possibilities:\n- The grid is a two-dimensional array where each inner value is a key for\n  the map object, and the map object maps these keys to objects that\n  represent each tile\n- The grid is a string representing a two-dimensional array just like the\n  previous possibility, where each character in the string is a key for the\n  map object (except newlines, which identify new rows) and the map object\n  maps these keys to objects that represent each tile. An underscore (_)\n  represents null (a blank tile).\n- The grid is a two-dimensional array where each inner value is either null\n  (representing a blank tile) or a constructor function (e.g. Box) or some\n  form of image (anything that context.drawImage() can draw).</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-_getCellCoordsInRect' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-_getCellCoordsInRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-_getCellCoordsInRect' class='name expandable'>_getCellCoordsInRect</a>( <span class='pre'>wx, wy, tw, th</span> )</div><div class='description'><div class='short'>Gets the max and min array coordinates of cells that are in a rectangle. ...</div><div class='long'><p>Gets the max and min array coordinates of cells that are in a rectangle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wx</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>wy</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>tw</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>th</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-clearAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-clearAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-clearAll' class='name expandable'>clearAll</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Clear all tiles (make them blank). ...</div><div class='long'><p>Clear all tiles (make them blank).</p>\n</div></div></div><div id='method-clearCell' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-clearCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-clearCell' class='name expandable'>clearCell</a>( <span class='pre'>row, col</span> )</div><div class='description'><div class='short'>Clear a specific tile (make it blank). ...</div><div class='long'><p>Clear a specific tile (make it blank).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>row</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>col</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-draw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-draw' class='name expandable'>draw</a>( <span class='pre'>ctx, occlude, smooth</span> )</div><div class='description'><div class='short'>Draw all the tiles. ...</div><div class='long'><p>Draw all the tiles.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctx</span> : Object<div class='sub-desc'><p>(Optional) A canvas graphics context onto which to draw the tiles. This\n  is useful for drawing onto Layers. If not specified, defaults to the\n  global context for the default canvas.</p>\n</div></li><li><span class='pre'>occlude</span> : Object<div class='sub-desc'><p>(Optional) A boolean indicating whether to only draw tiles that are\n  visible within the viewport. This is performance-friendly for huge\n  TileMaps. Note that if you enable occlusion, you need to re-draw the\n  TileMap whenever the viewport scrolls. If you are just drawing the\n  TileMap once, for example onto a background Layer cache, occluding is\n  unnecessary. Defaults to false (all tiles are drawn).</p>\n</div></li><li><span class='pre'>smooth</span> : Object<div class='sub-desc'><p>(Optional) A boolean indicating whether to force the Box to be drawn at\n  whole-pixel coordinates. If you don't already know that your coordinates\n  will be integers, this option can speed up painting since the browser\n  does not have to interpolate the image. However, sub-pixel-level\n  precision is lost. If you do know that your coordinates will be\n  integers, enabling this option will be slower. Defaults to whatever the\n  default is for each object being drawn.</p>\n</div></li></ul></div></div></div><div id='method-forEach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-forEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-forEach' class='name expandable'>forEach</a>( <span class='pre'>f, includeNull</span> )<strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Execute a function on every element in the TileMap. ...</div><div class='long'><p>Execute a function on every element in the TileMap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>f</span> : Object<div class='sub-desc'><p>The function to execute on each tile. Parameters are the object being\n  processed, its row, and its column. (This lets the function use\n  getCell() if it needs to check surrounding cells.) The function should\n  return a truthy value to remove the object being processed from the\n  TileMap.</p>\n</div></li><li><span class='pre'>includeNull</span> : Object<div class='sub-desc'><p>(Optional) A boolean indicating whether to execute the function on null\n  elements as well as other tiles. Defaults to false.</p>\n</div></li></ul></div></div></div><div id='method-getAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-getAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-getAll' class='name expandable'>getAll</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Return an array of all non-null objects in the TileMap. ...</div><div class='long'><p>Return an array of all non-null objects in the TileMap.</p>\n\n<p>For large TileMaps, consider using getCellsInRect() for efficiency, since\nit only returns cells within a certain area (the viewport by default).</p>\n\n<p>Note that if you just used a TileMap to easily initialize a bunch of\ntiles, or if you're not adding or removing tiles frequently but you are\ncalling this function frequently, you can also convert your TileMap to a\nCollection:</p>\n\n<p>var myCollection = new Collection(myTileMap.getAll());</p>\n\n<p>This is more efficient if you always need to process every item in the\nTileMap and you don't care about their relative position.</p>\n\n<p>@see getCellsInRect()</p>\n</div></div></div><div id='method-getCell' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-getCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-getCell' class='name expandable'>getCell</a>( <span class='pre'>row, col</span> )</div><div class='description'><div class='short'>Get the object at a specific tile using the row and column. ...</div><div class='long'><p>Get the object at a specific tile using the row and column.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>row</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>col</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCellsInRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-getCellsInRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-getCellsInRect' class='name expandable'>getCellsInRect</a>( <span class='pre'>x, y, w, h</span> )</div><div class='description'><div class='short'>Return all objects within a given rectangle. ...</div><div class='long'><p>Return all objects within a given rectangle.</p>\n\n<p>This method returns an array of all non-null objects in the TileMap within\na rectangle specified in pixels. If no rectangle is specified, this method\ndefaults to retrieving all objects in view (i.e. it uses the viewport as\nthe rectangle).</p>\n\n<p>This is an efficient way to process only objects that are in view (or\nnearly in view) which is extremely useful for efficient processing of only\nrelevant information in a very large map.</p>\n\n<p>@see getAll()</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>w</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>h</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCols' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-getCols' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-getCols' class='name expandable'>getCols</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Get the number of columns in the grid. ...</div><div class='long'><p>Get the number of columns in the grid.</p>\n\n<p>@see getRows()</p>\n</div></div></div><div id='method-getRows' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-getRows' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-getRows' class='name expandable'>getRows</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Get the number of rows in the grid. ...</div><div class='long'><p>Get the number of rows in the grid.</p>\n\n<p>@see getCols()</p>\n</div></div></div><div id='method-setCell' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TileMap'>TileMap</span><br/><a href='source/actors.html#TileMap-method-setCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TileMap-method-setCell' class='name expandable'>setCell</a>( <span class='pre'>row, col, obj</span> )</div><div class='description'><div class='short'>Place a specific object into a specific tile using the row and column. ...</div><div class='long'><p>Place a specific object into a specific tile using the row and column.</p>\n\n<p>If an object is already located there, it will be overwritten.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>row</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>col</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});