Ext.data.JsonP.Actor({"tagname":"class","name":"Actor","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Actor","members":{"cfg":[],"property":[{"name":"AIR_CONTROL","tagname":"property","owner":"Actor","meta":{},"id":"property-AIR_CONTROL"},{"name":"CONTINUOUS_MOVEMENT","tagname":"property","owner":"Actor","meta":{},"id":"property-CONTINUOUS_MOVEMENT"},{"name":"GRAVITY","tagname":"property","owner":"Actor","meta":{},"id":"property-GRAVITY"},{"name":"G_CONST","tagname":"property","owner":"Actor","meta":{},"id":"property-G_CONST"},{"name":"JUMP_DELAY","tagname":"property","owner":"Actor","meta":{},"id":"property-JUMP_DELAY"},{"name":"JUMP_RELEASE","tagname":"property","owner":"Actor","meta":{},"id":"property-JUMP_RELEASE"},{"name":"JUMP_VEL","tagname":"property","owner":"Actor","meta":{},"id":"property-JUMP_VEL"},{"name":"MOVEAMOUNT","tagname":"property","owner":"Actor","meta":{},"id":"property-MOVEAMOUNT"},{"name":"MULTI_JUMP","tagname":"property","owner":"Actor","meta":{},"id":"property-MULTI_JUMP"},{"name":"STAY_IN_WORLD","tagname":"property","owner":"Actor","meta":{},"id":"property-STAY_IN_WORLD"}],"method":[{"name":"_collideSolidBox","tagname":"method","owner":"Actor","meta":{},"id":"method-_collideSolidBox"},{"name":"collideSolid","tagname":"method","owner":"Actor","meta":{},"id":"method-collideSolid"},{"name":"drawDefault","tagname":"method","owner":"Actor","meta":{},"id":"method-drawDefault"},{"name":"hasAirMomentum","tagname":"method","owner":"Actor","meta":{},"id":"method-hasAirMomentum"},{"name":"init","tagname":"method","owner":"Actor","meta":{},"id":"method-init"},{"name":"isFalling","tagname":"method","owner":"Actor","meta":{},"id":"method-isFalling"},{"name":"isInAir","tagname":"method","owner":"Actor","meta":{},"id":"method-isInAir"},{"name":"isJumping","tagname":"method","owner":"Actor","meta":{},"id":"method-isJumping"},{"name":"isMoveAllowed","tagname":"method","owner":"Actor","meta":{},"id":"method-isMoveAllowed"},{"name":"move","tagname":"method","owner":"Actor","meta":{},"id":"method-move"},{"name":"moveOutside","tagname":"method","owner":"Actor","meta":{},"id":"method-moveOutside"},{"name":"moveOutsideX","tagname":"method","owner":"Actor","meta":{},"id":"method-moveOutsideX"},{"name":"moveOutsideY","tagname":"method","owner":"Actor","meta":{},"id":"method-moveOutsideY"},{"name":"release","tagname":"method","owner":"Actor","meta":{},"id":"method-release"},{"name":"setDraggable","tagname":"method","owner":"Actor","meta":{},"id":"method-setDraggable"},{"name":"standingOn","tagname":"method","owner":"Actor","meta":{},"id":"method-standingOn"},{"name":"startFalling","tagname":"method","owner":"Actor","meta":{},"id":"method-startFalling"},{"name":"stopFalling","tagname":"method","owner":"Actor","meta":{},"id":"method-stopFalling"},{"name":"update","tagname":"method","owner":"Actor","meta":{},"id":"method-update"},{"name":"updateAnimation","tagname":"method","owner":"Actor","meta":{},"id":"method-updateAnimation"},{"name":"useAnimation","tagname":"method","owner":"Actor","meta":{},"id":"method-useAnimation"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1318,"files":[{"filename":"actors.js","href":"actors.html#Actor"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/actors.html#Actor' target='_blank'>actors.js</a></div></pre><div class='doc-contents'><p>Actors are Boxes that can move.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-AIR_CONTROL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-AIR_CONTROL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-AIR_CONTROL' class='name expandable'>AIR_CONTROL</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>Percent of normal horizontal velocity Actors can move while in the air. ...</div><div class='long'><p>Percent of normal horizontal velocity Actors can move while in the air.</p>\n\n<p>Note that if Actors are moving horizontally before jumping, they keep\nmoving at the same speed in the air; in this case air control only takes\neffect if they switch direction mid-air. Otherwise, air control only\napplies if they started moving horizontally after they entered the air.</p>\n<p>Defaults to: <code>0.25</code></p></div></div></div><div id='property-CONTINUOUS_MOVEMENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-CONTINUOUS_MOVEMENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-CONTINUOUS_MOVEMENT' class='name expandable'>CONTINUOUS_MOVEMENT</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether to make the Actor continue moving in the last direction specified. ...</div><div class='long'><p>Whether to make the Actor continue moving in the last direction specified.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-GRAVITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-GRAVITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-GRAVITY' class='name expandable'>GRAVITY</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether gravity (downward acceleration) is enabled. ...</div><div class='long'><p>Whether gravity (downward acceleration) is enabled.</p>\n\n<p>This is effectively a toggle between a top-down and side view.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-G_CONST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-G_CONST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-G_CONST' class='name expandable'>G_CONST</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>Gravitational acceleration in pixels per second-squared. ...</div><div class='long'><p>Gravitational acceleration in pixels per second-squared.</p>\n\n<p>Has no effect if GRAVITY is false. Setting to 0 (zero) has a similar\nphysical effect to disabling gravity.</p>\n<p>Defaults to: <code>1500</code></p></div></div></div><div id='property-JUMP_DELAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-JUMP_DELAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-JUMP_DELAY' class='name expandable'>JUMP_DELAY</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>The minimum number of milliseconds required between jumps. ...</div><div class='long'><p>The minimum number of milliseconds required between jumps.</p>\n\n<p>Has no effect if GRAVITY is false or JUMP_VEL is 0 (zero).</p>\n<p>Defaults to: <code>250</code></p></div></div></div><div id='property-JUMP_RELEASE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-JUMP_RELEASE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-JUMP_RELEASE' class='name expandable'>JUMP_RELEASE</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether to require that the jump key is released before jumping again. ...</div><div class='long'><p>Whether to require that the jump key is released before jumping again.</p>\n\n<p>Specifically, this is a boolean which, when true, restricts the Actor from\njumping after being in the air until after the Actor is on the ground with\nthe jump key released. This limits the ability to \"bounce\" by holding down\nthe jump key. This behavior depends on being notified of when keys are\nreleased via the release() method, which happens automatically for\nPlayers. If you enable this for standard Actors, the meaning of a \"key\npress\" is artificial, so you must make sure to call release() before you\nmake the Actor jump again.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-JUMP_VEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-JUMP_VEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-JUMP_VEL' class='name expandable'>JUMP_VEL</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>Jump velocity in pixels per second. ...</div><div class='long'><p>Jump velocity in pixels per second.</p>\n\n<p>Has no effect if GRAVITY is false. Set to 0 (zero) to disable jumping.</p>\n<p>Defaults to: <code>800</code></p></div></div></div><div id='property-MOVEAMOUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-MOVEAMOUNT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-MOVEAMOUNT' class='name expandable'>MOVEAMOUNT</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>The velocity the Actor can move in pixels per second. ...</div><div class='long'><p>The velocity the Actor can move in pixels per second.</p>\n<p>Defaults to: <code>400</code></p></div></div></div><div id='property-MULTI_JUMP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-MULTI_JUMP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-MULTI_JUMP' class='name expandable'>MULTI_JUMP</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>The number of times an Actor can jump without touching the ground. ...</div><div class='long'><p>The number of times an Actor can jump without touching the ground.</p>\n\n<p>-1 allows the Actor to jump in the air an infinite number of times. A\nvalue of zero is the same as a value of one (i.e. a value of zero will not\nstop the Actor from having one jump).</p>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-STAY_IN_WORLD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-property-STAY_IN_WORLD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-property-STAY_IN_WORLD' class='name expandable'>STAY_IN_WORLD</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether the Actor will be restricted to not move outside the world. ...</div><div class='long'><p>Whether the Actor will be restricted to not move outside the world.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-_collideSolidBox' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-_collideSolidBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-_collideSolidBox' class='name expandable'>_collideSolidBox</a>( <span class='pre'>moved, collideWith</span> )</div><div class='description'><div class='short'>Check collision with a single solid and adjust the Actor's position. ...</div><div class='long'><p>Check collision with a single solid and adjust the Actor's position.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>moved</span> : Object<div class='sub-desc'><p>An object with 'x' and 'y' properties indicating the distance in pixels\n  that the Actor moved since the last repaint.</p>\n</div></li><li><span class='pre'>collideWith</span> : Object<div class='sub-desc'><p>A Box with which to check collision.</p>\n</div></li></ul></div></div></div><div id='method-collideSolid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-collideSolid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-collideSolid' class='name expandable'>collideSolid</a>( <span class='pre'>moved, collideWith</span> )</div><div class='description'><div class='short'>Check collision with solids and adjust the Actor's position as necessary. ...</div><div class='long'><p>Check collision with solids and adjust the Actor's position as necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>moved</span> : Object<div class='sub-desc'><p>An object with 'x' and 'y' properties indicating the distance in pixels\n  that the Actor moved since the last repaint.</p>\n</div></li><li><span class='pre'>collideWith</span> : Object<div class='sub-desc'><p>A Box, Collection, or TileMap of objects with which to check collision.</p>\n</div></li></ul></div></div></div><div id='method-drawDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-drawDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-drawDefault' class='name expandable'>drawDefault</a>( <span class='pre'>ctx, x, y, w, h</span> )</div><div class='description'><div class='short'>Actors draw as a smiley face by default. ...</div><div class='long'><p>Actors draw as a smiley face by default.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctx</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>x</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>w</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>h</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasAirMomentum' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-hasAirMomentum' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-hasAirMomentum' class='name expandable'>hasAirMomentum</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Check whether the Actor has air momentum (as opposed to air control). ...</div><div class='long'><p>Check whether the Actor has air momentum (as opposed to air control).</p>\n\n<p>@see startFalling()\n@see stopFalling()\n@see isInAir()\n@see isJumping()\n@see isFalling()</p>\n</div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-init' class='name expandable'>init</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Initialize an Actor. ...</div><div class='long'><p>Initialize an Actor.</p>\n</div></div></div><div id='method-isFalling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-isFalling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-isFalling' class='name expandable'>isFalling</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Check whether the Actor is in the air from falling (as opposed to jumping). ...</div><div class='long'><p>Check whether the Actor is in the air from falling (as opposed to jumping).</p>\n\n<p>@see startFalling()\n@see stopFalling()\n@see isInAir()\n@see isJumping()\n@see hasAirMomentum()</p>\n</div></div></div><div id='method-isInAir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-isInAir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-isInAir' class='name expandable'>isInAir</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Check whether the Actor is in the air or not. ...</div><div class='long'><p>Check whether the Actor is in the air or not.</p>\n\n<p>@see startFalling()\n@see stopFalling()\n@see isJumping()\n@see isFalling()\n@see hasAirMomentum()</p>\n</div></div></div><div id='method-isJumping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-isJumping' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-isJumping' class='name expandable'>isJumping</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Check whether the Actor is jumping or not. ...</div><div class='long'><p>Check whether the Actor is jumping or not.</p>\n\n<p>@see startFalling()\n@see stopFalling()\n@see isInAir()\n@see isFalling()\n@see hasAirMomentum()</p>\n</div></div></div><div id='method-isMoveAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-isMoveAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-isMoveAllowed' class='name expandable'>isMoveAllowed</a>( <span class='pre'>moved, collideWith, fix</span> )</div><div class='description'><div class='short'>Check whether the movement made during this frame was allowed. ...</div><div class='long'><p>Check whether the movement made during this frame was allowed.</p>\n\n<p>This is useful for making sure Actors can't walk through walls if the\nframe rate drops dramatically or they're going really fast.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>moved</span> : Object<div class='sub-desc'><p>An object with 'x' and 'y' properties indicating the number of pixels\n  the Actor has moved along each axis.</p>\n</div></li><li><span class='pre'>collideWith</span> : Object<div class='sub-desc'><p>A Box, Collection, or TileMap indicating the solid object(s) with which\n  to check for collision.</p>\n</div></li><li><span class='pre'>fix</span> : Object<div class='sub-desc'><p>A boolean indicating whether or not to correct the move if it is not\n  allowed. Defaults to false.</p>\n</div></li></ul></div></div></div><div id='method-move' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-move' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-move' class='name expandable'>move</a>( <span class='pre'>direction</span> )</div><div class='description'><div class='short'>Moves the Actor in a given direction. ...</div><div class='long'><p>Moves the Actor in a given direction.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Object<div class='sub-desc'><p>An array of directions in which to move the Actor. Directions are\n  expected to correspond to keys on the keyboard (as described by\n  jQuery.hotkeys).</p>\n</div></li></ul></div></div></div><div id='method-moveOutside' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-moveOutside' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-moveOutside' class='name expandable'>moveOutside</a>( <span class='pre'>other</span> )</div><div class='description'><div class='short'>Moves this Actor outside of another Box so that it no longer overlaps. ...</div><div class='long'><p>Moves this Actor outside of another Box so that it no longer overlaps.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object<div class='sub-desc'><p>The other Box that this Actor should be moved outside of.</p>\n</div></li></ul></div></div></div><div id='method-moveOutsideX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-moveOutsideX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-moveOutsideX' class='name expandable'>moveOutsideX</a>( <span class='pre'>other</span> )</div><div class='description'><div class='short'>Moves this Actor outside of another Box on the x-axis to avoid overlap. ...</div><div class='long'><p>Moves this Actor outside of another Box on the x-axis to avoid overlap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object<div class='sub-desc'><p>The other Box that this Actor should be moved outside of.</p>\n</div></li></ul></div></div></div><div id='method-moveOutsideY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-moveOutsideY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-moveOutsideY' class='name expandable'>moveOutsideY</a>( <span class='pre'>other</span> )</div><div class='description'><div class='short'>Moves this Actor outside of another Box on the y-axis to avoid overlap. ...</div><div class='long'><p>Moves this Actor outside of another Box on the y-axis to avoid overlap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object<div class='sub-desc'><p>The other Box that this Actor should be moved outside of.</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-release' class='name expandable'>release</a>( <span class='pre'>releasedDirections</span> )</div><div class='description'><div class='short'>Notify the Actor that a direction is no longer being given. ...</div><div class='long'><p>Notify the Actor that a direction is no longer being given.</p>\n\n<p>This is useful when Actors need to distinguish between directions being\ngiven continuously (such as when holding down a key) and those being given\nintermittently (such as a simple key press).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>releasedDirections</span> : Object<div class='sub-desc'><p>An array containing directions that are no longer being given.</p>\n</div></li></ul></div></div></div><div id='method-setDraggable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-setDraggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-setDraggable' class='name expandable'>setDraggable</a>( <span class='pre'>on</span> )</div><div class='description'><div class='short'>Toggle whether the Actor can be dragged around by the mouse. ...</div><div class='long'><p>Toggle whether the Actor can be dragged around by the mouse.</p>\n\n<p>Be careful with this. By default, Actors are still subject to all the same\nbehavioral rules. If you try to drag an Actor that is restricted to one\naxis, it will still only move along that axis. Collision still applies,\nbut you may find that collision doesn't quite work the way you think it\ndoes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-standingOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-standingOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-standingOn' class='name expandable'>standingOn</a>( <span class='pre'>box</span> )</div><div class='description'><div class='short'>Check whether this Actor is standing on top of the box. ...</div><div class='long'><p>Check whether this Actor is standing on top of the box.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>box</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-startFalling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-startFalling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-startFalling' class='name expandable'>startFalling</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Start falling. ...</div><div class='long'><p>Start falling.</p>\n\n<p>This method has no meaning if GRAVITY is false.</p>\n\n<p>@see stopFalling()\n@see isInAir()\n@see isJumping()\n@see isFalling()\n@see hasAirMomentum()</p>\n</div></div></div><div id='method-stopFalling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-stopFalling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-stopFalling' class='name expandable'>stopFalling</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Notify the Actor that it has landed. ...</div><div class='long'><p>Notify the Actor that it has landed.</p>\n\n<p>This method has no meaning if GRAVITY is false.</p>\n\n<p>@see startFalling()\n@see isInAir()\n@see isJumping()\n@see isFalling()\n@see hasAirMomentum()</p>\n</div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-update' class='name expandable'>update</a>( <span class='pre'>direction</span> )</div><div class='description'><div class='short'>Update the Actor every cycle. ...</div><div class='long'><p>Update the Actor every cycle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Object<div class='sub-desc'><p>An array of directions in which to move the Actor. Directions are\n  expected to correspond to keys on the keyboard (as described by\n  jQuery.hotkeys).</p>\n</div></li></ul></div></div></div><div id='method-updateAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-updateAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-updateAnimation' class='name expandable'>updateAnimation</a>( <span class='pre'>moved</span> )</div><div class='description'><div class='short'>Change the Actor's animation sequence if it uses a SpriteMap. ...</div><div class='long'><p>Change the Actor's animation sequence if it uses a SpriteMap.</p>\n\n<p>All animations fall back to the \"stand\" animation if they are not\navailable. The \"jumpRight\" and \"jumpLeft\" sequences will try to fall back\nto the \"lookRight\" and \"lookLeft\" sequences first, respectively, if they\nare not available. Animations that will play by default if they are\navailable include:\n- stand (required)\n- left\n- right\n- up\n- down\n- upRight\n- upLeft\n- downRight\n- downLeft\n- jump\n- fall\n- jumpRight\n- jumpLeft\n- lookRight\n- lookLeft\n- lookUp\n- lookDown\n- lookUpRight\n- lookUpLeft\n- lookDownRight\n- lookDownLeft</p>\n\n<p>Override this function if you want to modify the custom rules for which\nanimations to play (or what the animations' names are).</p>\n\n<p>This function does nothing if the Actor's \"src\" attribute is not a\nSpriteMap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>moved</span> : Object<div class='sub-desc'><p>An object with 'x' and 'y' properties indicating the number of pixels\n  the Actor has moved along each axis.</p>\n\n<p>@see useAnimation()</p>\n</div></li></ul></div></div></div><div id='method-useAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Actor'>Actor</span><br/><a href='source/actors.html#Actor-method-useAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Actor-method-useAnimation' class='name expandable'>useAnimation</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Try to switch to a different SpriteMap animation sequence. ...</div><div class='long'><p>Try to switch to a different SpriteMap animation sequence.</p>\n\n<p>Takes animation sequence names as arguments as switches to the first named\nsequence that exists in the SpriteMap. If you already know what animation\nsequences you have available, you might as well just call this.src.use()\ndirectly.</p>\n</div></div></div></div></div></div></div>"});