Ext.data.JsonP.ImageWrapper({"tagname":"class","name":"ImageWrapper","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-ImageWrapper","members":{"cfg":[],"property":[],"method":[{"name":"draw","tagname":"method","owner":"ImageWrapper","meta":{},"id":"method-draw"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":445,"files":[{"filename":"actors.js","href":"actors.html#ImageWrapper"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/actors.html#ImageWrapper' target='_blank'>actors.js</a></div></pre><div class='doc-contents'><p>A wrapper for image tiles so they can be drawn in the right location.</p>\n\n<p>Used internally by TileMap.</p>\n\n<p>src can be any object of type String (e.g. a file path to an image),\nImage, HTMLImageElement, HTMLCanvasElement, Sprite, or SpriteMap.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-draw' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageWrapper'>ImageWrapper</span><br/><a href='source/actors.html#ImageWrapper-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageWrapper-method-draw' class='name expandable'>draw</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Draws the image. ...</div><div class='long'><p>Draws the image.</p>\n</div></div></div></div></div></div></div>"});